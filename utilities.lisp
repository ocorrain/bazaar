(in-package #:shopper)

(defun partition-list (list partition-length)
  (if (< (length list) partition-length)
      (list list)
      (cons (subseq list 0 partition-length)
	    (partition-list (subseq list partition-length) partition-length))))

(defmacro with-class ((obj string) &body body)
  (let ((g (gensym)))
    `(let ((,g (read-from-string ,string)))
       (logger :info "WITH-CLASS - ~S ~S" ,obj ,string)
       (if (and (symbolp ,g) (subtypep ,g 'cms))
	   (let ((,obj ,g))
	     (progn ,@body))
	   hunchentoot:+http-bad-request+))))


(defmacro with-object ((object class identifier page) &body body)
  (let ((g (gensym))
	(pagesym (gensym)))
    `(with-class (class-sym ,class)
       (let ((,pagesym (read-from-string ,page)))
	 (if (and (symbolp ,pagesym)
		  (page-permitted class-sym ,pagesym))
	     (if-let (,g (get-object ,class ,identifier))
	       (let ((,object ,g))
		 ,@body)
	       hunchentoot:+http-not-found+)
	     hunchentoot:+http-bad-request+)))))
